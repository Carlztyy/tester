--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (3 == v24) then
			v8 = _G[v7("\86\69\179\190\132\11\66\5", "\34\42\221\203\233\105\39\119")];
			v9 = _G[v7("\222\59\36\207\4\88", "\173\79\86\166\106\63")][v7("\169\207\66\230", "\203\182\54\131\32")];
			v10 = _G[v7("\95\69\39\250\117\48", "\44\49\85\147\27\87")][v7("\76\82\201\202", "\47\58\168\184")];
			v24 = 4;
		end
		if (1 == v24) then
			v3 = bit32 or bit;
			v4 = v3.bxor;
			v5 = table.concat;
			v24 = 2;
		end
		if (v24 == 7) then
			v20 = _G[v7("\162\89\222\188\83\165", "\209\60\178\217\48")];
			v21 = _G[v7("\8\226\7\190\30\231", "\125\140\119\223")] or _G[v7("\38\186\201\21\232", "\82\219\171\121\141\69\80\58")][v7("\156\115\49\252\214\130", "\233\29\65\157\181")];
			v22 = _G[v7("\226\220\46\38\40\244\214\50", "\150\179\64\83\69")];
			v24 = 8;
		end
		if (v24 == 8) then
			v23 = nil;
			v23 = function(v27, v28, ...)
				local v35 = 0;
				local v36;
				local v37;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				while true do
					if (v35 == 3) then
						v48 = nil;
						while true do
							local v51 = 0;
							while true do
								if (v51 == 3) then
									if (v36 == 0) then
										local v53 = 0;
										while true do
											if (v53 == 0) then
												v37 = 1632 - ((1728 - 422) + 325);
												v38 = nil;
												v53 = 1;
											end
											if (v53 == 1) then
												v27 = v12(v11(v27, 5), v7("\125\197", "\83\235\24\27\121"), function(v61)
													if (v9(v61, 1 + (1 - 0)) == (45 + 34)) then
														local v107 = 0;
														local v108;
														while true do
															if (v107 == 0) then
																v108 = 0;
																while true do
																	if (v108 == 0) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v38 = v8(v11(v61, 1, 1 + 0));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v109 = 0;
														local v110;
														local v111;
														while true do
															if (v109 == 1) then
																while true do
																	if (0 == v110) then
																		v111 = v10(v8(v61, 62 - (17 + 29)));
																		if v38 then
																			local v143 = 0;
																			local v144;
																			local v145;
																			while true do
																				if (v143 == 0) then
																					v144 = 0;
																					v145 = nil;
																					v143 = 1;
																				end
																				if (v143 == 1) then
																					while true do
																						local v172 = 0;
																						while true do
																							if (v172 == 0) then
																								if (v144 == 0) then
																									local v177 = 0;
																									while true do
																										if (0 == v177) then
																											v145 = v13(v111, v38);
																											v38 = nil;
																											v177 = 1;
																										end
																										if (v177 == 1) then
																											v144 = 1;
																											break;
																										end
																									end
																								end
																								if (v144 == 1) then
																									return v145;
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			return v111;
																		end
																		break;
																	end
																end
																break;
															end
															if (v109 == 0) then
																v110 = 0;
																v111 = nil;
																v109 = 1;
															end
														end
													end
												end);
												v36 = 1;
												break;
											end
										end
									end
									if (v36 == 1) then
										local v54 = 0;
										while true do
											if (v54 == 1) then
												v40 = nil;
												v36 = 2;
												break;
											end
											if (v54 == 0) then
												v39 = nil;
												v39 = function(v62, v63, v64)
													if v64 then
														local v112 = 0;
														local v113;
														local v114;
														while true do
															if (v112 == 0) then
																v113 = 0;
																v114 = nil;
																v112 = 1;
															end
															if (1 == v112) then
																while true do
																	if (v113 == 0) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v114 = (v62 / ((1 + 1 + 0 + 0 + 0) ^ (v63 - (4 - 3)))) % (2 ^ (((v64 - (3 - 2)) - (v63 - ((1749 - (861 + 887)) + 0))) + ((2327 - (1430 + 161)) - (147 + 416 + 172))));
																				return v114 - (v114 % (191 - (24 + 166)));
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (1 == v115) then
																while true do
																	if (0 == v116) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v117 = (1255 - ((898 - (151 + 14)) + 259 + 261)) ^ (v63 - (614 - (223 + 390)));
																				return (((v62 % (v117 + v117)) >= v117) and (756 - (665 + (346 - 256)))) or ((0 + (0 - 0)) - (0 - 0));
																			end
																		end
																	end
																end
																break;
															end
															if (v115 == 0) then
																v116 = 0;
																v117 = nil;
																v115 = 1;
															end
														end
													end
												end;
												v54 = 1;
											end
										end
									end
									break;
								end
								if (v51 == 1) then
									if (v36 == 2) then
										local v55 = 0;
										while true do
											if (v55 == 1) then
												v41 = function()
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													while true do
														if (v69 == 0) then
															v70 = 0;
															v71 = nil;
															v69 = 1;
														end
														if (v69 == 1) then
															v72 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (v70 == (1 - 0)) then
																			return (v72 * 256) + v71;
																		end
																		if (0 == v70) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					v70 = 661 - (514 + 146);
																					break;
																				end
																				if (v128 == 0) then
																					v71, v72 = v9(v27, v37, v37 + 2);
																					v37 = v37 + (5 - (2 + 1 + 0));
																					v128 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v36 = 3;
												break;
											end
											if (v55 == 0) then
												v40 = function()
													local v73 = 0;
													local v74;
													local v75;
													while true do
														if (v73 == 1) then
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (v74 == (0 + 0)) then
																			local v129 = 0;
																			while true do
																				if (v129 == 1) then
																					v74 = 1 - 0;
																					break;
																				end
																				if (v129 == 0) then
																					v75 = v9(v27, v37, v37);
																					v37 = v37 + 1 + 0 + 0;
																					v129 = 1;
																				end
																			end
																		end
																		if (v74 == 1) then
																			return v75;
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v73 == 0) then
															v74 = 1423 - (529 + 894);
															v75 = nil;
															v73 = 1;
														end
													end
												end;
												v41 = nil;
												v55 = 1;
											end
										end
									end
									if (v36 == 3) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v43 = nil;
												v36 = 4;
												break;
											end
											if (v56 == 0) then
												v42 = nil;
												v42 = function()
													local v76 = 0;
													local v77;
													local v78;
													local v79;
													local v80;
													local v81;
													while true do
														if (v76 == 1) then
															v79 = nil;
															v80 = nil;
															v76 = 2;
														end
														if (v76 == 2) then
															v81 = nil;
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v77 == (3 - 2)) then
																			return (v81 * (16777452 - (((742 - 468) - (11 + 114)) + 87))) + (v80 * ((130978 - 65367) - (44 + (1398 - ((1471 - 564) + (969 - (426 + 83))))))) + (v79 * (454 - ((51 - 25) + 172))) + v78;
																		end
																		if (v77 == 0) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					v78, v79, v80, v81 = v9(v27, v37, v37 + ((2 + 4 + 1 + 0) - (2 + (4 - 2))));
																					v37 = v37 + ((1955 - (1225 + 62)) - (((2928 - (141 + 359)) - (1260 + 688)) + (291 - 107)));
																					v130 = 1;
																				end
																				if (v130 == 1) then
																					v77 = 1847 - (360 + 1486);
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v76 == 0) then
															v77 = 1815 - (1522 + 293);
															v78 = nil;
															v76 = 1;
														end
													end
												end;
												v56 = 1;
											end
										end
									end
									v51 = 2;
								end
								if (v51 == 0) then
									if (v36 == 6) then
										local v57 = 0;
										while true do
											if (0 == v57) then
												v47 = nil;
												v47 = function()
													local v82 = 0;
													local v83;
													local v84;
													local v85;
													local v86;
													local v87;
													local v88;
													local v89;
													while true do
														if (v82 == 0) then
															v83 = 0;
															v84 = nil;
															v82 = 1;
														end
														if (v82 == 2) then
															v87 = nil;
															v88 = nil;
															v82 = 3;
														end
														if (v82 == 3) then
															v89 = nil;
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 1) then
																		if (v83 == 1) then
																			local v131 = 0;
																			while true do
																				if (v131 == 2) then
																					v83 = 2;
																					break;
																				end
																				if (v131 == 0) then
																					v88 = v42();
																					v89 = {};
																					v131 = 1;
																				end
																				if (v131 == 1) then
																					for v150 = 1, v88 do
																						local v151 = 0;
																						local v152;
																						local v153;
																						local v154;
																						while true do
																							if (v151 == 1) then
																								v154 = nil;
																								while true do
																									if (v152 == 0) then
																										local v178 = 0;
																										while true do
																											if (v178 == 0) then
																												v153 = v40();
																												v154 = nil;
																												v178 = 1;
																											end
																											if (v178 == 1) then
																												v152 = 1;
																												break;
																											end
																										end
																									end
																									if (1 == v152) then
																										if (v153 == (123 - (108 + 14))) then
																											v154 = v40() ~= (0 - (0 + 0));
																										elseif (v153 == 2) then
																											v154 = v43();
																										elseif (v153 == 3) then
																											v154 = v44();
																										end
																										v89[v150] = v154;
																										break;
																									end
																								end
																								break;
																							end
																							if (v151 == 0) then
																								v152 = 0;
																								v153 = nil;
																								v151 = 1;
																							end
																						end
																					end
																					v87[9 - 6] = v40();
																					v131 = 2;
																				end
																			end
																		end
																		break;
																	end
																	if (v121 == 0) then
																		if (v83 == 2) then
																			local v132 = 0;
																			while true do
																				if (v132 == 0) then
																					for v155 = 1 + 0, v42() do
																						local v156 = 0;
																						local v157;
																						local v158;
																						while true do
																							if (v156 == 0) then
																								v157 = 0;
																								v158 = nil;
																								v156 = 1;
																							end
																							if (1 == v156) then
																								while true do
																									if (v157 == 0) then
																										v158 = v40();
																										if (v39(v158, 1, 1) == 0) then
																											local v183 = 0;
																											local v184;
																											local v185;
																											local v186;
																											local v187;
																											while true do
																												if (v183 == 2) then
																													while true do
																														if (v184 == 2) then
																															local v202 = 0;
																															while true do
																																if (v202 == 1) then
																																	v184 = 3;
																																	break;
																																end
																																if (v202 == 0) then
																																	if (v39(v186, (2424 - (1658 + 250)) - (414 + (144 - 43)), 1) == 1) then
																																		v187[1 + 1] = v89[v187[2]];
																																	end
																																	if (v39(v186, 1549 - (1086 + 461), 2) == (1 + 0 + 0)) then
																																		v187[(480 + 101) - (107 + 58 + 413)] = v89[v187[3 - 0]];
																																	end
																																	v202 = 1;
																																end
																															end
																														end
																														if (v184 == 1) then
																															local v203 = 0;
																															while true do
																																if (0 == v203) then
																																	v187 = {v41(),v41(),nil,nil};
																																	if (v185 == ((2564 - (383 + 210)) - ((7510 - 5973) + (1783 - (388 + 961))))) then
																																		local v219 = 0;
																																		local v220;
																																		while true do
																																			if (v219 == 0) then
																																				v220 = 0;
																																				while true do
																																					if (v220 == 0) then
																																						v187[(349 + 856) - (802 + (451 - (29 + 22)))] = v41();
																																						v187[18 - 14] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v185 == (418 - ((405 - 168) + 180))) then
																																		v187[(432 + 558) - (178 + 127 + 682)] = v42();
																																	elseif (v185 == (223 - (30 + 191))) then
																																		v187[(4 - 3) + 1 + 1] = v42() - ((1 + 1) ^ (20 - 4));
																																	elseif (v185 == (1882 - (1662 + 75 + (1880 - (1537 + 201))))) then
																																		local v228 = 0;
																																		local v229;
																																		while true do
																																			if (0 == v228) then
																																				v229 = 0;
																																				while true do
																																					if (v229 == 0) then
																																						v187[(3 + 4) - 4] = v42() - (2 ^ (5 + 7 + 4));
																																						v187[1270 - (243 + 1023)] = v41();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v203 = 1;
																																end
																																if (v203 == 1) then
																																	v184 = 2;
																																	break;
																																end
																															end
																														end
																														if (v184 == 0) then
																															local v204 = 0;
																															while true do
																																if (v204 == 1) then
																																	v184 = 1;
																																	break;
																																end
																																if (v204 == 0) then
																																	v185 = v39(v158, 3 - (1 + 0), 3);
																																	v186 = v39(v158, 13 - 9, 6);
																																	v204 = 1;
																																end
																															end
																														end
																														if (v184 == 3) then
																															if (v39(v186, 3, 5 - (2 + 0)) == (2 - (1 + 0))) then
																																v187[2 + 2] = v89[v187[(1541 - (209 + 1323)) - (14 - 9)]];
																															end
																															v84[v155] = v187;
																															break;
																														end
																													end
																													break;
																												end
																												if (v183 == 0) then
																													v184 = 0;
																													v185 = nil;
																													v183 = 1;
																												end
																												if (v183 == 1) then
																													v186 = nil;
																													v187 = nil;
																													v183 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					for v159 = (1050 - (524 + 524)) - 1, v42() do
																						v85[v159 - (305 - ((288 - 170) + (1615 - (1418 + 11))))] = v47();
																					end
																					v132 = 1;
																				end
																				if (v132 == 1) then
																					for v161 = (936 - (191 + 743)) - (1 - 0), v42() do
																						v86[v161] = v42();
																					end
																					return v87;
																				end
																			end
																		end
																		if (v83 == 0) then
																			local v133 = 0;
																			while true do
																				if (v133 == 1) then
																					v86 = {};
																					v87 = {v84,v85,nil,v86};
																					v133 = 2;
																				end
																				if (v133 == 2) then
																					v83 = 1;
																					break;
																				end
																				if (0 == v133) then
																					v84 = {};
																					v85 = {};
																					v133 = 1;
																				end
																			end
																		end
																		v121 = 1;
																	end
																end
															end
															break;
														end
														if (v82 == 1) then
															v85 = nil;
															v86 = nil;
															v82 = 2;
														end
													end
												end;
												v57 = 1;
											end
											if (v57 == 1) then
												v48 = nil;
												v36 = 7;
												break;
											end
										end
									end
									if (v36 == 7) then
										local v58 = 0;
										while true do
											if (v58 == 0) then
												v48 = function(v65, v66, v67)
													local v90 = 0;
													local v91;
													local v92;
													local v93;
													local v94;
													while true do
														if (v90 == 1) then
															v93 = nil;
															v94 = nil;
															v90 = 2;
														end
														if (2 == v90) then
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (v91 == 1) then
																			local v134 = 0;
																			while true do
																				if (0 == v134) then
																					v94 = v65[3];
																					return function(...)
																						local v163 = 0;
																						local v164;
																						local v165;
																						local v166;
																						local v167;
																						local v168;
																						local v169;
																						while true do
																							if (v163 == 1) then
																								v166 = nil;
																								v167 = nil;
																								v163 = 2;
																							end
																							if (v163 == 2) then
																								v168 = nil;
																								v169 = nil;
																								v163 = 3;
																							end
																							if (v163 == 3) then
																								while true do
																									if (0 == v164) then
																										local v180 = 0;
																										while true do
																											if (v180 == 0) then
																												v165 = 573 - (214 + 358);
																												v166 = -((651 - (22 + 628)) + 0);
																												v180 = 1;
																											end
																											if (v180 == 1) then
																												v164 = 1;
																												break;
																											end
																										end
																									end
																									if (v164 == 1) then
																										local v181 = 0;
																										while true do
																											if (v181 == 0) then
																												v167 = {...};
																												v168 = v20("#", ...) - (3 - 2);
																												v181 = 1;
																											end
																											if (v181 == 1) then
																												v164 = 2;
																												break;
																											end
																										end
																									end
																									if (2 == v164) then
																										local v182 = 0;
																										while true do
																											if (v182 == 1) then
																												v164 = 3;
																												break;
																											end
																											if (v182 == 0) then
																												v169 = nil;
																												v169 = function()
																													local v191 = 0;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													while true do
																														if (v191 == 1) then
																															v195 = v46;
																															v196 = {};
																															v197 = {};
																															v191 = 2;
																														end
																														if (v191 == 2) then
																															v198 = {};
																															for v206 = 0, v168 do
																																if (v206 >= v194) then
																																	v196[v206 - v194] = v167[v206 + 1 + 0];
																																else
																																	v198[v206] = v167[v206 + 1];
																																end
																															end
																															v199 = (v168 - v194) + (2 - (777 - (663 + 113)));
																															v191 = 3;
																														end
																														if (v191 == 3) then
																															v200 = nil;
																															v201 = nil;
																															while true do
																																local v207 = 0;
																																local v208;
																																while true do
																																	if (v207 == 0) then
																																		v208 = 0;
																																		while true do
																																			if (v208 == 0) then
																																				local v221 = 0;
																																				while true do
																																					if (v221 == 0) then
																																						v200 = v192[v165];
																																						v201 = v200[1 + 0 + 0];
																																						v221 = 1;
																																					end
																																					if (v221 == 1) then
																																						v208 = 1;
																																						break;
																																					end
																																				end
																																			end
																																			if (v208 == 1) then
																																				if (v201 <= ((1366 - 705) - (462 + 99 + 65))) then
																																					if (v201 <= (3 + 14)) then
																																						if (v201 <= 8) then
																																							if (v201 <= ((2354 - 1500) - ((851 - (404 + 2)) + (1693 - (554 + 733))))) then
																																								if (v201 <= ((1 + 0) - 0)) then
																																									if (v201 > 0) then
																																										local v232 = 0;
																																										local v233;
																																										local v234;
																																										local v235;
																																										local v236;
																																										while true do
																																											if (v232 == 2) then
																																												while true do
																																													if (v233 == 1) then
																																														v236 = v198[v234 + (9 - 7)];
																																														if (v236 > ((889 - (357 + 532)) + 0)) then
																																															if (v235 > v198[v234 + 1]) then
																																																v165 = v200[2 + (130 - (83 + 46))];
																																															else
																																																v198[v234 + ((5555 - 4093) - (1286 + 173))] = v235;
																																															end
																																														elseif (v235 < v198[v234 + 1]) then
																																															v165 = v200[1964 - (1769 + 192)];
																																														else
																																															v198[v234 + 1 + 2] = v235;
																																														end
																																														break;
																																													end
																																													if (0 == v233) then
																																														local v388 = 0;
																																														while true do
																																															if (v388 == 1) then
																																																v233 = 1;
																																																break;
																																															end
																																															if (v388 == 0) then
																																																v234 = v200[1 + 1 + 0];
																																																v235 = v198[v234];
																																																v388 = 1;
																																															end
																																														end
																																													end
																																												end
																																												break;
																																											end
																																											if (1 == v232) then
																																												v235 = nil;
																																												v236 = nil;
																																												v232 = 2;
																																											end
																																											if (v232 == 0) then
																																												v233 = 0;
																																												v234 = nil;
																																												v232 = 1;
																																											end
																																										end
																																									elseif not v198[v200[(480 + 295) - (288 + 485)]] then
																																										v165 = v165 + (3 - (8 - 6));
																																									else
																																										v165 = v200[(416 - (299 + 111)) - (399 - (112 + 284))];
																																									end
																																								elseif (v201 == 2) then
																																									if (v198[v200[5 - 3]] == v200[3 + 1]) then
																																										v165 = v165 + 1 + (601 - (511 + 90));
																																									else
																																										v165 = v200[(10 - 4) - (3 + 0)];
																																									end
																																								else
																																									v198[v200[2]] = {};
																																								end
																																							elseif (v201 <= 5) then
																																								if (v201 > ((8 + 1) - 5)) then
																																									v198[v200[(310 + 366) - (657 + (75 - 58))]][v198[v200[2 + 1]]] = v200[(3346 - 1776) - (1311 + 202 + 53)];
																																								elseif (v198[v200[2]] > v200[3 + (2 - 1)]) then
																																									v165 = v165 + (1 - 0);
																																								else
																																									v165 = v200[(214 - (123 + 88)) + (0 - 0)];
																																								end
																																							elseif (v201 <= 6) then
																																								if (v200[2] == v198[v200[1 + (5 - 2)]]) then
																																									v165 = v165 + ((1 + 0) - 0);
																																								else
																																									v165 = v200[(4 + 2) - (4 - 1)];
																																								end
																																							elseif (v201 > 7) then
																																								if (v198[v200[179 - (130 + 47)]] <= v198[v200[4]]) then
																																									v165 = v165 + (2 - 1);
																																								else
																																									v165 = v200[3];
																																								end
																																							else
																																								v66[v200[5 - (1 + 1)]] = v198[v200[3 - 1]];
																																							end
																																						elseif (v201 <= ((53 - 27) - 14)) then
																																							if (v201 <= (37 - 27)) then
																																								if (v201 == (4 + 5)) then
																																									local v240 = 0;
																																									local v241;
																																									local v242;
																																									while true do
																																										if (0 == v240) then
																																											v241 = 0;
																																											v242 = nil;
																																											v240 = 1;
																																										end
																																										if (v240 == 1) then
																																											while true do
																																												if (v241 == 0) then
																																													v242 = v198[v200[6 - 2]];
																																													if not v242 then
																																														v165 = v165 + (4 - 3);
																																													else
																																														local v444 = 0;
																																														local v445;
																																														while true do
																																															if (v444 == 0) then
																																																v445 = 0;
																																																while true do
																																																	if (0 == v445) then
																																																		v198[v200[(9 - 4) - 3]] = v242;
																																																		v165 = v200[11 - (16 - 8)];
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								else
																																									v198[v200[1 + 1 + (779 - (655 + 124))]] = v200[(1 + 7) - (6 - 1)] + v198[v200[13 - 9]];
																																								end
																																							elseif (v201 > 11) then
																																								v198[v200[2]] = v66[v200[1317 - (904 + 410)]];
																																							else
																																								v198[v200[2]] = v198[v200[3]] * v198[v200[141 - (89 + 48)]];
																																							end
																																						elseif (v201 <= ((3886 - (1145 + 755)) - (1474 + 498))) then
																																							if (v201 > 13) then
																																								do
																																									return;
																																								end
																																							else
																																								v198[v200[7 - (757 - (213 + 539))]] = v200[2 + 1];
																																							end
																																						elseif (v201 <= (74 - (42 + 17))) then
																																							local v249 = 0;
																																							local v250;
																																							local v251;
																																							local v252;
																																							local v253;
																																							while true do
																																								if (v249 == 2) then
																																									while true do
																																										if (v250 == 1) then
																																											v253 = 1427 - (1262 + 165);
																																											for v417 = v251, v200[5 - (1577 - (963 + 613))] do
																																												local v418 = 0;
																																												local v419;
																																												while true do
																																													if (0 == v418) then
																																														v419 = 0;
																																														while true do
																																															if (0 == v419) then
																																																v253 = v253 + (1 - 0);
																																																v198[v417] = v252[v253];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v250) then
																																											local v390 = 0;
																																											while true do
																																												if (v390 == 0) then
																																													v251 = v200[3 - 1];
																																													v252 = {v198[v251](v21(v198, v251 + 1, v200[(2262 - (293 + 1220)) - (444 + 70 + 232)]))};
																																													v390 = 1;
																																												end
																																												if (v390 == 1) then
																																													v250 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v249 == 0) then
																																									v250 = 0;
																																									v251 = nil;
																																									v249 = 1;
																																								end
																																								if (1 == v249) then
																																									v252 = nil;
																																									v253 = nil;
																																									v249 = 2;
																																								end
																																							end
																																						elseif (v201 > (1 + 12 + 3)) then
																																							v198[v200[1 + 1]] = v48(v193[v200[10 - (907 - (28 + 872))]], nil, v67);
																																						else
																																							local v352 = 0;
																																							local v353;
																																							local v354;
																																							while true do
																																								if (v352 == 0) then
																																									v353 = 0;
																																									v354 = nil;
																																									v352 = 1;
																																								end
																																								if (v352 == 1) then
																																									while true do
																																										if (v353 == 0) then
																																											v354 = v200[2 + (1797 - (51 + 1746))];
																																											v198[v354](v21(v198, v354 + 1 + 0 + 0, v166));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 <= 26) then
																																						if (v201 <= (1377 - (606 + 750))) then
																																							if (v201 <= ((161 - (116 + 15)) - (43 - 32))) then
																																								if (v201 > 18) then
																																									if v198[v200[2]] then
																																										v165 = v165 + ((3 + 0) - 2);
																																									else
																																										v165 = v200[3];
																																									end
																																								else
																																									local v254 = 0;
																																									local v255;
																																									local v256;
																																									while true do
																																										if (v254 == 0) then
																																											v255 = 0;
																																											v256 = nil;
																																											v254 = 1;
																																										end
																																										if (v254 == 1) then
																																											while true do
																																												if (v255 == 0) then
																																													v256 = v200[2];
																																													do
																																														return v198[v256](v21(v198, v256 + (1334 - (813 + 520)), v166));
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v201 == (1264 - (1164 + 80))) then
																																								v198[v200[2]] = v198[v200[7 - (1 + 3)]] - v198[v200[2 + 2]];
																																							else
																																								v198[v200[147 - ((1276 - (429 + 827)) + (552 - (55 + 372)))]] = #v198[v200[(3576 - (96 + 1855)) - ((4290 - 2952) + 284)]];
																																							end
																																						elseif (v201 <= ((797 - 412) - (248 + 114))) then
																																							if (v201 == (20 + 2)) then
																																								local v259 = 0;
																																								local v260;
																																								local v261;
																																								local v262;
																																								local v263;
																																								while true do
																																									if (v259 == 2) then
																																										while true do
																																											if (v260 == 0) then
																																												local v392 = 0;
																																												while true do
																																													if (v392 == 0) then
																																														v261 = v200[2 + 0];
																																														v262 = {v198[v261](v21(v198, v261 + 1 + 0, v166))};
																																														v392 = 1;
																																													end
																																													if (v392 == 1) then
																																														v260 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v260 == 1) then
																																												v263 = 0;
																																												for v420 = v261, v200[4] do
																																													local v421 = 0;
																																													local v422;
																																													while true do
																																														if (v421 == 0) then
																																															v422 = 0;
																																															while true do
																																																if (v422 == 0) then
																																																	v263 = v263 + 1;
																																																	v198[v420] = v262[v263];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v259 == 0) then
																																										v260 = 0;
																																										v261 = nil;
																																										v259 = 1;
																																									end
																																									if (v259 == 1) then
																																										v262 = nil;
																																										v263 = nil;
																																										v259 = 2;
																																									end
																																								end
																																							else
																																								local v264 = 0;
																																								local v265;
																																								local v266;
																																								local v267;
																																								while true do
																																									if (v264 == 0) then
																																										v265 = 0;
																																										v266 = nil;
																																										v264 = 1;
																																									end
																																									if (v264 == 1) then
																																										v267 = nil;
																																										while true do
																																											if (v265 == 1) then
																																												for v423 = v266 + 1, v166 do
																																													v15(v267, v198[v423]);
																																												end
																																												break;
																																											end
																																											if (v265 == 0) then
																																												local v393 = 0;
																																												while true do
																																													if (v393 == 0) then
																																														v266 = v200[918 - ((692 - 444) + 668)];
																																														v267 = v198[v266];
																																														v393 = 1;
																																													end
																																													if (v393 == 1) then
																																														v265 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 <= 24) then
																																							local v268 = 0;
																																							local v269;
																																							local v270;
																																							while true do
																																								if (v268 == 0) then
																																									v269 = 0;
																																									v270 = nil;
																																									v268 = 1;
																																								end
																																								if (1 == v268) then
																																									while true do
																																										if (v269 == 0) then
																																											v270 = v200[2 + 0];
																																											do
																																												return v198[v270](v21(v198, v270 + 1 + 0, v200[(1964 - (36 + 1926)) + (2 - 1)]));
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						elseif (v201 == ((106 - 51) - ((521 - (122 + 378)) + (242 - (215 + 18))))) then
																																							v198[v200[(1 - 0) + 1]]();
																																						else
																																							v198[v200[(1604 - (680 + 921)) - (786 - (325 + 460))]] = v200[13 - (20 - 10)] ~= ((0 - 0) - 0);
																																						end
																																					elseif (v201 <= 30) then
																																						if (v201 <= (17 + 11)) then
																																							if (v201 == ((207 - 114) - (52 + 14))) then
																																								local v271 = 0;
																																								local v272;
																																								while true do
																																									if (v271 == 0) then
																																										v272 = 0;
																																										while true do
																																											if (v272 == 0) then
																																												v198[v200[1248 - ((1514 - 468) + 200)]] = v200[1503 - (1224 + (2125 - (1266 + 583)))] ~= (0 - 0);
																																												v165 = v165 + (669 - (82 + 586));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								do
																																									return v198[v200[2]];
																																								end
																																							end
																																						elseif (v201 > (85 - 56)) then
																																							v198[v200[1427 - (429 + 996)]] = v200[7 - (1038 - (665 + 369))] / v200[(1436 - (834 + 600)) + 1 + 1];
																																						else
																																							v198[v200[1480 - (413 + 1065)]][v200[870 - (502 + 365)]] = v198[v200[4]];
																																						end
																																					elseif (v201 <= (21 + 11)) then
																																						if (v201 == 31) then
																																							if (v200[(261 - (106 + 154)) + 1 + 0] <= v200[3 + 1]) then
																																								v165 = v165 + (3 - 2);
																																							else
																																								v165 = v200[2 + 1 + 0];
																																							end
																																						elseif (v200[2] ~= v198[v200[3 + 1]]) then
																																							v165 = v165 + (886 - (342 + 543));
																																						else
																																							v165 = v200[(637 - (424 + 207)) - 3];
																																						end
																																					elseif (v201 <= (1033 - (657 + 343))) then
																																						if (v200[2] < v198[v200[4]]) then
																																							v165 = v165 + ((3603 - (529 + 1343)) - (1290 + 440));
																																						else
																																							v165 = v200[1 + 2];
																																						end
																																					elseif (v201 > 34) then
																																						v67[v200[(1333 - (235 + 1090)) - (305 - (78 + 222))]] = v198[v200[5 - 3]];
																																					else
																																						v198[v200[(426 - (72 + 286)) - (27 + (91 - 52))]] = v67[v200[5 - (6 - 4)]];
																																					end
																																				elseif (v201 <= ((135 - (15 + 71)) + (8 - 4))) then
																																					if (v201 <= (86 - (20 + 22))) then
																																						if (v201 <= (13 + 26)) then
																																							if (v201 <= (3 + 0 + (1244 - (212 + 998)))) then
																																								if (v201 > (60 - 24)) then
																																									local v276 = 0;
																																									local v277;
																																									local v278;
																																									local v279;
																																									while true do
																																										if (v276 == 1) then
																																											v279 = nil;
																																											while true do
																																												if (v277 == 0) then
																																													local v396 = 0;
																																													while true do
																																														if (v396 == 1) then
																																															v277 = 1;
																																															break;
																																														end
																																														if (v396 == 0) then
																																															v278 = v200[2 - (0 - 0)];
																																															v279 = v198[v278];
																																															v396 = 1;
																																														end
																																													end
																																												end
																																												if (v277 == 1) then
																																													for v424 = v278 + 1, v200[2 + 1] do
																																														v15(v279, v198[v424]);
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (0 == v276) then
																																											v277 = 0;
																																											v278 = nil;
																																											v276 = 1;
																																										end
																																									end
																																								else
																																									local v280 = 0;
																																									local v281;
																																									local v282;
																																									while true do
																																										if (v280 == 0) then
																																											v281 = 0;
																																											v282 = nil;
																																											v280 = 1;
																																										end
																																										if (v280 == 1) then
																																											while true do
																																												if (v281 == 0) then
																																													v282 = v200[1853 - (1546 + 305)];
																																													v198[v282](v198[v282 + (1441 - (250 + 1100 + (124 - 34)))]);
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v201 > (1781 - (1707 + 36))) then
																																								v198[v200[3 - 1]] = v198[v200[(2703 - 2005) - ((913 - (4 + 285)) + (211 - 140))]] % v198[v200[1210 - (412 + 794)]];
																																							else
																																								local v284 = 0;
																																								local v285;
																																								local v286;
																																								while true do
																																									if (v284 == 1) then
																																										while true do
																																											if (v285 == 0) then
																																												local v398 = 0;
																																												while true do
																																													if (0 == v398) then
																																														v286 = v200[6 - 4];
																																														v166 = (v286 + v199) - (1 - 0);
																																														v398 = 1;
																																													end
																																													if (v398 == 1) then
																																														v285 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v285 == 1) then
																																												for v425 = v286, v166 do
																																													local v426 = 0;
																																													local v427;
																																													local v428;
																																													while true do
																																														if (v426 == 1) then
																																															while true do
																																																if (v427 == 0) then
																																																	v428 = v196[v425 - v286];
																																																	v198[v425] = v428;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																														if (v426 == 0) then
																																															v427 = 0;
																																															v428 = nil;
																																															v426 = 1;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v284 == 0) then
																																										v285 = 0;
																																										v286 = nil;
																																										v284 = 1;
																																									end
																																								end
																																							end
																																						elseif (v201 <= (40 + 1)) then
																																							if (v201 == (515 - (159 + (355 - (11 + 28))))) then
																																								for v343 = v200[(963 - (884 + 77)) - (0 + 0)], v200[3] do
																																									v198[v343] = nil;
																																								end
																																							else
																																								v198[v200[1412 - (1026 + 198 + 186)]] = v198[v200[3]];
																																							end
																																						elseif (v201 <= (1953 - (286 + 1625))) then
																																							v198[v200[(65 - (28 + 35)) - (0 - 0)]] = v198[v200[2 + (1 - 0)]] * v200[1796 - (966 + 826)];
																																						elseif (v201 == (230 - (178 + 9))) then
																																							local v364 = 0;
																																							local v365;
																																							local v366;
																																							local v367;
																																							local v368;
																																							local v369;
																																							while true do
																																								if (v364 == 1) then
																																									v367 = nil;
																																									v368 = nil;
																																									v364 = 2;
																																								end
																																								if (v364 == 2) then
																																									v369 = nil;
																																									while true do
																																										if (1 == v365) then
																																											local v447 = 0;
																																											while true do
																																												if (v447 == 0) then
																																													v166 = (v368 + v366) - ((359 + 473) - ((1061 - (97 + 273)) + 140));
																																													v369 = 0 + 0;
																																													v447 = 1;
																																												end
																																												if (v447 == 1) then
																																													v365 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v365 == 0) then
																																											local v448 = 0;
																																											while true do
																																												if (v448 == 1) then
																																													v365 = 1;
																																													break;
																																												end
																																												if (v448 == 0) then
																																													v366 = v200[1 + 1];
																																													v367, v368 = v195(v198[v366](v198[v366 + 1]));
																																													v448 = 1;
																																												end
																																											end
																																										end
																																										if (v365 == 2) then
																																											for v462 = v366, v166 do
																																												local v463 = 0;
																																												local v464;
																																												while true do
																																													if (0 == v463) then
																																														v464 = 0;
																																														while true do
																																															if (v464 == 0) then
																																																v369 = v369 + (1117 - (813 + 303));
																																																v198[v462] = v367[v369];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v364 == 0) then
																																									v365 = 0;
																																									v366 = nil;
																																									v364 = 1;
																																								end
																																							end
																																						else
																																							v198[v200[(1435 - (384 + 1047)) - (1 + 1)]] = v198[v200[(30 - 22) - (2 + 3)]] - v200[(1968 - (12 + 8)) - (1755 + (349 - (115 + 45)))];
																																						end
																																					elseif (v201 <= (491 - (256 + 187))) then
																																						if (v201 <= ((91 + 81) - 126)) then
																																							if (v201 == (275 - (216 + 14))) then
																																								local v290 = 0;
																																								local v291;
																																								local v292;
																																								while true do
																																									if (1 == v290) then
																																										while true do
																																											if (v291 == 0) then
																																												v292 = v200[2 - 0];
																																												v198[v292] = v198[v292]();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v290) then
																																										v291 = 0;
																																										v292 = nil;
																																										v290 = 1;
																																									end
																																								end
																																							else
																																								local v293 = 0;
																																								local v294;
																																								local v295;
																																								local v296;
																																								local v297;
																																								local v298;
																																								while true do
																																									if (v293 == 2) then
																																										v298 = nil;
																																										while true do
																																											if (v294 == 1) then
																																												local v401 = 0;
																																												while true do
																																													if (v401 == 1) then
																																														v294 = 2;
																																														break;
																																													end
																																													if (v401 == 0) then
																																														v166 = (v297 + v295) - (1 + 0 + 0);
																																														v298 = 0 + 0 + 0 + 0;
																																														v401 = 1;
																																													end
																																												end
																																											end
																																											if (0 == v294) then
																																												local v402 = 0;
																																												while true do
																																													if (v402 == 1) then
																																														v294 = 1;
																																														break;
																																													end
																																													if (v402 == 0) then
																																														v295 = v200[2];
																																														v296, v297 = v195(v198[v295](v21(v198, v295 + (673 - (600 + 72)) + 0, v166)));
																																														v402 = 1;
																																													end
																																												end
																																											end
																																											if (v294 == 2) then
																																												for v429 = v295, v166 do
																																													local v430 = 0;
																																													local v431;
																																													while true do
																																														if (v430 == 0) then
																																															v431 = 0;
																																															while true do
																																																if (v431 == 0) then
																																																	v298 = v298 + 1 + 0;
																																																	v198[v429] = v296[v298];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v293 == 0) then
																																										v294 = 0;
																																										v295 = nil;
																																										v293 = 1;
																																									end
																																									if (v293 == 1) then
																																										v296 = nil;
																																										v297 = nil;
																																										v293 = 2;
																																									end
																																								end
																																							end
																																						elseif (v201 > (18 + 29)) then
																																							v165 = v200[3 + (513 - (224 + 289))];
																																						else
																																							v198[v200[2]] = v198[v200[(1290 - (851 + 435)) - 1]][v198[v200[4]]];
																																						end
																																					elseif (v201 <= 50) then
																																						if (v201 == ((2000 - 718) - ((871 - (413 + 38)) + 813))) then
																																							local v302 = 0;
																																							local v303;
																																							local v304;
																																							local v305;
																																							while true do
																																								if (v302 == 1) then
																																									v305 = nil;
																																									while true do
																																										if (v303 == 1) then
																																											for v432 = v304 + 1, v200[(3 + 2) - 1] do
																																												v305 = v305 .. v198[v432];
																																											end
																																											v198[v200[2 + 0 + 0]] = v305;
																																											break;
																																										end
																																										if (v303 == 0) then
																																											local v404 = 0;
																																											while true do
																																												if (v404 == 0) then
																																													v304 = v200[(7 + 3) - 7];
																																													v305 = v198[v304];
																																													v404 = 1;
																																												end
																																												if (v404 == 1) then
																																													v303 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v302 == 0) then
																																									v303 = 0;
																																									v304 = nil;
																																									v302 = 1;
																																								end
																																							end
																																						else
																																							v198[v200[5 - 3]] = v198[v200[(1948 - (918 + 1019)) - 8]] % v200[13 - (20 - 11)];
																																						end
																																					elseif (v201 <= (20 + 31)) then
																																						if (v198[v200[2 + 0]] ~= v198[v200[1696 - (101 + 1591)]]) then
																																							v165 = v165 + 1;
																																						else
																																							v165 = v200[(1014 - (185 + 362)) - (220 + 5 + 239)];
																																						end
																																					elseif (v201 > 52) then
																																						if (v200[2 + 0] == v200[4 + 0]) then
																																							v165 = v165 + (2 - 1);
																																						else
																																							v165 = v200[3];
																																						end
																																					else
																																						v198[v200[1 + 1]] = v200[3 + 0] ^ v198[v200[1213 - (648 + 337 + 224)]];
																																					end
																																				elseif (v201 <= (157 - 95)) then
																																					if (v201 <= 57) then
																																						if (v201 <= (35 + 20)) then
																																							if (v201 > (144 - 90)) then
																																								local v307 = 0;
																																								local v308;
																																								local v309;
																																								local v310;
																																								while true do
																																									if (v307 == 1) then
																																										v310 = nil;
																																										while true do
																																											if (v308 == 0) then
																																												local v405 = 0;
																																												while true do
																																													if (v405 == 0) then
																																														v309 = v200[2 + 0];
																																														v310 = {};
																																														v405 = 1;
																																													end
																																													if (v405 == 1) then
																																														v308 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v308 == 1) then
																																												for v433 = 1 + 0 + 0, #v197 do
																																													local v434 = 0;
																																													local v435;
																																													local v436;
																																													while true do
																																														if (0 == v434) then
																																															v435 = 0;
																																															v436 = nil;
																																															v434 = 1;
																																														end
																																														if (v434 == 1) then
																																															while true do
																																																if (v435 == 0) then
																																																	v436 = v197[v433];
																																																	for v512 = 0, #v436 do
																																																		local v513 = 0;
																																																		local v514;
																																																		local v515;
																																																		local v516;
																																																		local v517;
																																																		while true do
																																																			if (v513 == 1) then
																																																				v516 = nil;
																																																				v517 = nil;
																																																				v513 = 2;
																																																			end
																																																			if (v513 == 0) then
																																																				v514 = 0;
																																																				v515 = nil;
																																																				v513 = 1;
																																																			end
																																																			if (v513 == 2) then
																																																				while true do
																																																					if (v514 == 1) then
																																																						v517 = v515[1 + 1];
																																																						if ((v516 == v198) and (v517 >= v309)) then
																																																							local v533 = 0;
																																																							local v534;
																																																							while true do
																																																								if (v533 == 0) then
																																																									v534 = 0;
																																																									while true do
																																																										if (v534 == 0) then
																																																											v310[v517] = v516[v517];
																																																											v515[1] = v310;
																																																											break;
																																																										end
																																																									end
																																																									break;
																																																								end
																																																							end
																																																						end
																																																						break;
																																																					end
																																																					if (v514 == 0) then
																																																						local v532 = 0;
																																																						while true do
																																																							if (v532 == 0) then
																																																								v515 = v436[v512];
																																																								v516 = v515[1 + 0];
																																																								v532 = 1;
																																																							end
																																																							if (1 == v532) then
																																																								v514 = 1;
																																																								break;
																																																							end
																																																						end
																																																					end
																																																				end
																																																				break;
																																																			end
																																																		end
																																																	end
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v307) then
																																										v308 = 0;
																																										v309 = nil;
																																										v307 = 1;
																																									end
																																								end
																																							else
																																								v198[v200[(10 - 7) - 1]] = v198[v200[4 - 1]][v200[4]];
																																							end
																																						elseif (v201 == (119 - 63)) then
																																							local v313 = 0;
																																							local v314;
																																							local v315;
																																							local v316;
																																							local v317;
																																							local v318;
																																							while true do
																																								if (v313 == 1) then
																																									v316 = nil;
																																									v317 = nil;
																																									v313 = 2;
																																								end
																																								if (v313 == 0) then
																																									v314 = 0;
																																									v315 = nil;
																																									v313 = 1;
																																								end
																																								if (v313 == 2) then
																																									v318 = nil;
																																									while true do
																																										if (v314 == 2) then
																																											for v437 = v315, v166 do
																																												local v438 = 0;
																																												local v439;
																																												while true do
																																													if (v438 == 0) then
																																														v439 = 0;
																																														while true do
																																															if (v439 == 0) then
																																																v318 = v318 + 1 + 0;
																																																v198[v437] = v316[v318];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v314 == 1) then
																																											local v406 = 0;
																																											while true do
																																												if (v406 == 1) then
																																													v314 = 2;
																																													break;
																																												end
																																												if (v406 == 0) then
																																													v166 = (v317 + v315) - (1 - 0);
																																													v318 = 0;
																																													v406 = 1;
																																												end
																																											end
																																										end
																																										if (v314 == 0) then
																																											local v407 = 0;
																																											while true do
																																												if (v407 == 0) then
																																													v315 = v200[(2 - 1) + (1 - 0)];
																																													v316, v317 = v195(v198[v315](v21(v198, v315 + (4 - 3), v200[1 + 1 + 1])));
																																													v407 = 1;
																																												end
																																												if (1 == v407) then
																																													v314 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v319 = 0;
																																							local v320;
																																							local v321;
																																							local v322;
																																							local v323;
																																							while true do
																																								if (v319 == 1) then
																																									v322 = nil;
																																									v323 = nil;
																																									v319 = 2;
																																								end
																																								if (v319 == 2) then
																																									while true do
																																										if (v320 == 1) then
																																											local v408 = 0;
																																											while true do
																																												if (v408 == 0) then
																																													v323 = v198[v321] + v322;
																																													v198[v321] = v323;
																																													v408 = 1;
																																												end
																																												if (v408 == 1) then
																																													v320 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v320 == 0) then
																																											local v409 = 0;
																																											while true do
																																												if (1 == v409) then
																																													v320 = 1;
																																													break;
																																												end
																																												if (v409 == 0) then
																																													v321 = v200[2];
																																													v322 = v198[v321 + 2 + 0 + 0];
																																													v409 = 1;
																																												end
																																											end
																																										end
																																										if (2 == v320) then
																																											if (v322 > ((1786 - (552 + 1234)) - (0 + 0))) then
																																												if (v323 <= v198[v321 + ((2805 - (342 + 1025)) - (1153 + 284))]) then
																																													local v484 = 0;
																																													local v485;
																																													while true do
																																														if (v484 == 0) then
																																															v485 = 0;
																																															while true do
																																																if (0 == v485) then
																																																	v165 = v200[(1456 - (266 + 1183)) - 4];
																																																	v198[v321 + (7 - (2 + 2))] = v323;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																											elseif (v323 >= v198[v321 + ((750 + 293) - (710 + (2109 - (421 + 1356))))]) then
																																												local v486 = 0;
																																												local v487;
																																												while true do
																																													if (v486 == 0) then
																																														v487 = 0;
																																														while true do
																																															if (v487 == 0) then
																																																v165 = v200[217 - (76 + 138)];
																																																v198[v321 + 3] = v323;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (0 == v319) then
																																									v320 = 0;
																																									v321 = nil;
																																									v319 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= ((1023 - (816 + 113)) - 35)) then
																																						if (v201 > (9 + 49)) then
																																							if (v200[4 - (2 + 0)] < v200[4]) then
																																								v165 = v165 + 1;
																																							else
																																								v165 = v200[6 - 3];
																																							end
																																						else
																																							local v324 = 0;
																																							local v325;
																																							local v326;
																																							local v327;
																																							local v328;
																																							while true do
																																								if (v324 == 0) then
																																									v325 = 0;
																																									v326 = nil;
																																									v324 = 1;
																																								end
																																								if (v324 == 1) then
																																									v327 = nil;
																																									v328 = nil;
																																									v324 = 2;
																																								end
																																								if (2 == v324) then
																																									while true do
																																										if (v325 == 2) then
																																											for v440 = (2 + 0) - 1, v200[(1520 - (509 + 1007)) + 0] do
																																												local v441 = 0;
																																												local v442;
																																												local v443;
																																												while true do
																																													if (v441 == 1) then
																																														while true do
																																															if (v442 == 0) then
																																																local v508 = 0;
																																																while true do
																																																	if (v508 == 0) then
																																																		v165 = v165 + 1 + 0;
																																																		v443 = v192[v165];
																																																		v508 = 1;
																																																	end
																																																	if (v508 == 1) then
																																																		v442 = 1;
																																																		break;
																																																	end
																																																end
																																															end
																																															if (v442 == 1) then
																																																if (v443[3 - 2] == ((209 - 150) - 18)) then
																																																	v328[v440 - (1 + 0)] = {v198,v443[1675 - (738 + 934)]};
																																																else
																																																	v328[v440 - 1] = {v66,v443[1 + 0 + 2]};
																																																end
																																																v197[#v197 + ((3497 - 1772) - (1111 + (1044 - 431)))] = v328;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																													if (v441 == 0) then
																																														v442 = 0;
																																														v443 = nil;
																																														v441 = 1;
																																													end
																																												end
																																											end
																																											v198[v200[2]] = v48(v326, v327, v67);
																																											break;
																																										end
																																										if (v325 == 0) then
																																											local v411 = 0;
																																											while true do
																																												if (v411 == 1) then
																																													v325 = 1;
																																													break;
																																												end
																																												if (0 == v411) then
																																													v326 = v193[v200[6 - 3]];
																																													v327 = nil;
																																													v411 = 1;
																																												end
																																											end
																																										end
																																										if (v325 == 1) then
																																											local v412 = 0;
																																											while true do
																																												if (v412 == 0) then
																																													v328 = {};
																																													v327 = v18({}, {[v7("\0\181\164\135\59\143\181", "\95\234\205\233")]=function(v474, v475)
																																														local v488 = 0;
																																														local v489;
																																														local v490;
																																														while true do
																																															if (1 == v488) then
																																																while true do
																																																	if (0 == v489) then
																																																		local v527 = 0;
																																																		while true do
																																																			if (0 == v527) then
																																																				v490 = v328[v475];
																																																				return v490[(675 - (558 + 115)) - (398 - (87 + 310))][v490[1 + 1]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																															if (v488 == 0) then
																																																v489 = 0;
																																																v490 = nil;
																																																v488 = 1;
																																															end
																																														end
																																													end,[v7("\49\14\253\173\178\7\63\247\173\189", "\110\81\147\200\197")]=function(v474, v475, v476)
																																														local v491 = 0;
																																														local v492;
																																														local v493;
																																														while true do
																																															if (v491 == 0) then
																																																v492 = 0;
																																																v493 = nil;
																																																v491 = 1;
																																															end
																																															if (v491 == 1) then
																																																while true do
																																																	if (0 == v492) then
																																																		v493 = v328[v475];
																																																		v493[2 - 1][v493[1 + 1]] = v476;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end});
																																													v412 = 1;
																																												end
																																												if (v412 == 1) then
																																													v325 = 2;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (997 - (867 + 10 + 60))) then
																																						local v329 = 0;
																																						local v330;
																																						local v331;
																																						while true do
																																							if (v329 == 1) then
																																								while true do
																																									if (0 == v330) then
																																										v331 = v200[1410 - (912 + 496)];
																																										do
																																											return v21(v198, v331, v331 + v200[4 - (1730 - (1531 + 198))]);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v329 == 0) then
																																								v330 = 0;
																																								v331 = nil;
																																								v329 = 1;
																																							end
																																						end
																																					elseif (v201 > 61) then
																																						local v374 = 0;
																																						local v375;
																																						local v376;
																																						while true do
																																							if (0 == v374) then
																																								v375 = 0;
																																								v376 = nil;
																																								v374 = 1;
																																							end
																																							if (v374 == 1) then
																																								while true do
																																									if (v375 == 0) then
																																										v376 = v200[4 - 2];
																																										v198[v376] = v198[v376](v21(v198, v376 + (866 - (401 + 464)), v200[6 - (2 + 1)]));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v198[v200[2]] <= v200[1 + 0 + (880 - (857 + 20))]) then
																																						v165 = v165 + 1;
																																					else
																																						v165 = v200[3];
																																					end
																																				elseif (v201 <= (372 - (54 + 252))) then
																																					if (v201 <= (21 + (894 - (708 + 143)))) then
																																						if (v201 == ((31 + 143) - (194 - 83))) then
																																							v198[v200[2 + 0]] = v198[v200[1222 - ((2867 - (819 + 866)) + (779 - (4 + 738)))]] + v200[(113 + 18) - (11 + 116)];
																																						else
																																							v198[v200[2 - 0]] = v198[v200[3]] / v198[v200[1 + 3]];
																																						end
																																					elseif (v201 > (1500 - (590 + 655 + 120 + 70))) then
																																						local v334 = 0;
																																						local v335;
																																						local v336;
																																						while true do
																																							if (1 == v334) then
																																								while true do
																																									if (v335 == 0) then
																																										v336 = v200[1227 - (239 + (1204 - (93 + 125)))];
																																										do
																																											return v21(v198, v336, v166);
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v334 == 0) then
																																								v335 = 0;
																																								v336 = nil;
																																								v334 = 1;
																																							end
																																						end
																																					else
																																						v198[v200[2]][v198[v200[3]]] = v198[v200[4]];
																																					end
																																				elseif (v201 <= 68) then
																																					if (v201 > (33 + 34)) then
																																						if (v198[v200[631 - (542 + 87)]] ~= v200[4]) then
																																							v165 = v165 + 1 + 0;
																																						else
																																							v165 = v200[2 + 1];
																																						end
																																					else
																																						local v339 = 0;
																																						local v340;
																																						local v341;
																																						while true do
																																							if (v339 == 1) then
																																								while true do
																																									if (v340 == 0) then
																																										v341 = v200[(9 - 2) - 5];
																																										v198[v341] = v198[v341](v21(v198, v341 + ((234 + 1721) - (921 + 79 + 220 + 734)), v166));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v339 == 0) then
																																								v340 = 0;
																																								v341 = nil;
																																								v339 = 1;
																																							end
																																						end
																																					end
																																				elseif (v201 <= (22 + 0 + (801 - (285 + 469)))) then
																																					v198[v200[(554 + 1068) - (163 + 1340 + 117)]] = v198[v200[1279 - ((1005 - 236) + 365 + 142)]] + v198[v200[2 + 2]];
																																				elseif (v201 == (443 - (324 + 5 + 44))) then
																																					local v378 = 0;
																																					local v379;
																																					local v380;
																																					local v381;
																																					local v382;
																																					while true do
																																						if (v378 == 2) then
																																							while true do
																																								if (1 == v379) then
																																									v382 = v200[4 - 1];
																																									for v477 = 1, v382 do
																																										v381[v477] = v198[v380 + v477];
																																									end
																																									break;
																																								end
																																								if (v379 == 0) then
																																									local v452 = 0;
																																									while true do
																																										if (v452 == 0) then
																																											v380 = v200[2 - 0];
																																											v381 = v198[v380];
																																											v452 = 1;
																																										end
																																										if (v452 == 1) then
																																											v379 = 1;
																																											break;
																																										end
																																									end
																																								end
																																							end
																																							break;
																																						end
																																						if (1 == v378) then
																																							v381 = nil;
																																							v382 = nil;
																																							v378 = 2;
																																						end
																																						if (0 == v378) then
																																							v379 = 0;
																																							v380 = nil;
																																							v378 = 1;
																																						end
																																					end
																																				else
																																					v198[v200[(1 - 0) + 1]] = v198[v200[3]] / v200[4];
																																				end
																																				v165 = v165 + 1;
																																				break;
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v191 == 0) then
																															v192 = v92;
																															v193 = v93;
																															v194 = v94;
																															v191 = 1;
																														end
																													end
																												end;
																												v182 = 1;
																											end
																										end
																									end
																									if (v164 == 3) then
																										_G['A'], _G['B'] = v46(v19(v169));
																										if not _G['A'][(1 - 0) + 0] then
																											local v188 = 0;
																											local v189;
																											local v190;
																											while true do
																												if (1 == v188) then
																													while true do
																														if (v189 == 0) then
																															v190 = v65[(1188 - 944) - (232 + 8)][v165] or "?";
																															error(v7("\34\91\188\126\155\230\48\20\74\188\120\153\178\113\5\24\149", "\113\56\206\23\235\146\16") .. v190 .. v7("\12\17", "\81\43\225\187\174\39\213") .. _G['A'][(3633 - (162 + 1616)) - (1022 + 291 + 540)]);
																															break;
																														end
																													end
																													break;
																												end
																												if (v188 == 0) then
																													v189 = 0;
																													v190 = nil;
																													v188 = 1;
																												end
																											end
																										else
																											return v21(_G['A'], (4 + 180) - (9 + 173), _G['B']);
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (v163 == 0) then
																								v164 = 0;
																								v165 = nil;
																								v163 = 1;
																							end
																						end
																					end;
																				end
																			end
																		end
																		if (v91 == 0) then
																			local v135 = 0;
																			while true do
																				if (v135 == 1) then
																					v91 = 1;
																					break;
																				end
																				if (v135 == 0) then
																					v92 = v65[(1086 - (675 + 410)) + 0];
																					v93 = v65[3 - 1];
																					v135 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v90 == 0) then
															v91 = 0;
															v92 = nil;
															v90 = 1;
														end
													end
												end;
												return v48(v47(), {}, v28)(...);
											end
										end
									end
									v51 = 1;
								end
								if (v51 == 2) then
									if (v36 == 5) then
										local v59 = 0;
										while true do
											if (v59 == 0) then
												v45 = v42;
												v46 = nil;
												v59 = 1;
											end
											if (v59 == 1) then
												v46 = function(...)
													return {...}, v20("#", ...);
												end;
												v36 = 6;
												break;
											end
										end
									end
									if (v36 == 4) then
										local v60 = 0;
										while true do
											if (v60 == 1) then
												v44 = function(v68)
													local v95 = 0;
													local v96;
													local v97;
													local v98;
													while true do
														if (v95 == 1) then
															v98 = nil;
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if ((1559 - (1236 + 322)) == v96) then
																			local v136 = 0;
																			while true do
																				if (0 == v136) then
																					v97 = v11(v27, v37, (v37 + v68) - (((206 + 98) - ((784 - 568) + (291 - 206))) - (1 + 1)));
																					v37 = v37 + v68;
																					v136 = 1;
																				end
																				if (1 == v136) then
																					v96 = 2;
																					break;
																				end
																			end
																		end
																		if (v96 == 3) then
																			return v14(v98);
																		end
																		v123 = 1;
																	end
																	if (1 == v123) then
																		if (0 == v96) then
																			local v137 = 0;
																			while true do
																				if (v137 == 1) then
																					v96 = 1;
																					break;
																				end
																				if (v137 == 0) then
																					v97 = nil;
																					if not v68 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (v173 == 0) then
																								v174 = 0 + 0;
																								while true do
																									if (v174 == 0) then
																										v68 = v42();
																										if (v68 == (((30 + 253) - (139 + (531 - 387))) - (0 - (835 - (87 + 748))))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v137 = 1;
																				end
																			end
																		end
																		if (2 == v96) then
																			local v138 = 0;
																			while true do
																				if (0 == v138) then
																					v98 = {};
																					for v170 = 1 + 0 + (0 - 0), #v97 do
																						v98[v170] = v10(v9(v11(v97, v170, v170)));
																					end
																					v138 = 1;
																				end
																				if (v138 == 1) then
																					v96 = 3;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v95 == 0) then
															v96 = 0 - 0;
															v97 = nil;
															v95 = 1;
														end
													end
												end;
												v36 = 5;
												break;
											end
											if (v60 == 0) then
												v43 = function()
													local v99 = 0;
													local v100;
													local v101;
													local v102;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (0 == v99) then
															v100 = 0 - 0;
															v101 = nil;
															v99 = 1;
														end
														if (v99 == 2) then
															v104 = nil;
															v105 = nil;
															v99 = 3;
														end
														if (v99 == 3) then
															v106 = nil;
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 0) then
																		if (v100 == (2 - 0)) then
																			local v139 = 0;
																			while true do
																				if (v139 == 0) then
																					v105 = v39(v102, (168 - 131) - (15 + 1), 74 - (1294 - (1040 + 211)));
																					v106 = ((v39(v102, (3 + 16 + 37) - (36 - (6 + 6))) == 1) and -(((2050 - (478 + 857)) + 347) - (202 + 859))) or 1;
																					v139 = 1;
																				end
																				if (v139 == 1) then
																					v100 = 3;
																					break;
																				end
																			end
																		end
																		if (v100 == (1 - 0)) then
																			local v140 = 0;
																			while true do
																				if (v140 == 1) then
																					v100 = 4 - 2;
																					break;
																				end
																				if (v140 == 0) then
																					v103 = (4 - 3) + ((0 - 0) - (0 + 0));
																					v104 = (v39(v102, 244 - (230 + 13), 20) * (2 ^ (((3 + 51) - 43) + (58 - (34 + (6 - 3)))))) + v101;
																					v140 = 1;
																				end
																			end
																		end
																		v124 = 1;
																	end
																	if (1 == v124) then
																		if (v100 == 3) then
																			local v141 = 0;
																			while true do
																				if (v141 == 0) then
																					if (v105 == (0 + 0 + 0)) then
																						if (v104 == (0 - 0)) then
																							return v106 * ((3426 - (562 + 1132)) - ((6231 - 4725) + 226));
																						else
																							local v175 = 0;
																							local v176;
																							while true do
																								if (v175 == 0) then
																									v176 = 0;
																									while true do
																										if (v176 == (0 + 0)) then
																											v105 = 1 - 0;
																											v103 = 0 - (0 + 0);
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v105 == ((1339 + 2263) - ((189 - (47 + 48)) + 1461))) then
																						return ((v104 == ((0 - 0) - (0 + 0))) and (v106 * (((3 - 2) + 0) / (0 - 0)))) or (v106 * NaN);
																					end
																					return v16(v106, v105 - ((860 + 692) - (471 + (1011 - (289 + 664))))) * (v103 + (v104 / (((4 - 3) + (1 - 0)) ^ (131 - (183 - (53 + 51))))));
																				end
																			end
																		end
																		if (v100 == 0) then
																			local v142 = 0;
																			while true do
																				if (1 == v142) then
																					v100 = 1 + 0;
																					break;
																				end
																				if (v142 == 0) then
																					v101 = v42();
																					v102 = v42();
																					v142 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v99 == 1) then
															v102 = nil;
															v103 = nil;
															v99 = 2;
														end
													end
												end;
												v44 = nil;
												v60 = 1;
											end
										end
									end
									v51 = 3;
								end
							end
						end
						break;
					end
					if (v35 == 1) then
						v40 = nil;
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v35 = 2;
					end
					if (v35 == 0) then
						v36 = 0;
						v37 = nil;
						v38 = nil;
						v39 = nil;
						v35 = 1;
					end
					if (v35 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v47 = nil;
						v35 = 3;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 5) then
			v14 = _G[v7("\149\125\23\222\226", "\225\28\117\178\135")][v7("\52\30\210\251\217\35", "\87\113\188\152\184")];
			v15 = _G[v7("\67\138\85\143\190", "\55\235\55\227\219\229\131")][v7("\254\0\236\233\217\244", "\151\110\159\140\171\128\127")];
			v16 = _G[v7("\167\255\78\239", "\202\158\58\135")][v7("\189\249\238\18\161", "\209\157\139\106")];
			v24 = 6;
		end
		if (4 == v24) then
			v11 = _G[v7("\9\150\233\14\91\20", "\122\226\155\103\53\115\108")][v7("\39\218\181", "\84\175\215\40\16\75\200")];
			v12 = _G[v7("\172\96\93\254\181\33", "\223\20\47\151\219\70\144\211")][v7("\56\108\151\238", "\95\31\226\140\25\45\213")];
			v13 = _G[v7("\232\205\182\65\199\234", "\155\185\196\40\169\141\182\196")][v7("\26\239\51", "\104\138\67\117\108\172\230")];
			v24 = 5;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v24 = 1;
		end
		if (v24 == 2) then
			v6 = table.insert;
			v7 = nil;
			v7 = function(v33, v34)
				local v49 = 0;
				local v50;
				while true do
					if (v49 == 1) then
						return v5(v50);
					end
					if (0 == v49) then
						v50 = {};
						for v52 = 1, #v33 do
							v6(v50, v0(v4(v1(v2(v33, v52, v52 + 1)), v1(v2(v34, 1 + ((v52 - 1) % #v34), 1 + ((v52 - 1) % #v34) + 1))) % 256));
						end
						v49 = 1;
					end
				end
			end;
			v24 = 3;
		end
		if (v24 == 6) then
			v17 = _G[v7("\198\45\37\90\64\203\215", "\161\72\81\60\37\165")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\56\4\207\113\46\21\218\104\42\3\215\121", "\75\97\187\28")];
			v19 = _G[v7("\71\162\124\61\7", "\55\193\29\81\107\158")];
			v24 = 7;
		end
	end
end
